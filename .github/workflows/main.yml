name: CI/CD Pipeline with DooD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 소스 코드 체크아웃
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Docker 소켓을 마운트하고 빌드
      run: |
        docker run --rm \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v $PWD:/workspace \
          -w /workspace \
          docker:latest \
          sh -c "
            docker-compose down &&
            docker-compose up -d --build
          "

    - name: 단위 및 통합 테스트 실행
      run: |
        docker run --rm \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v $PWD:/workspace \
          -w /workspace \
          docker:latest \
          sh -c "
            docker-compose run --rm app ./gradlew test
          "

    - name: EC2에 배포
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        scp -i $SSH_KEY -o "StrictHostKeyChecking=no" docker-compose.yml $EC2_USER@$EC2_HOST:/home/ubuntu/
        ssh -i $SSH_KEY -o "StrictHostKeyChecking=no" $EC2_USER@$EC2_HOST "
          docker-compose down &&
          docker image prune -f &&
          docker-compose -f /home/ubuntu/docker-compose.yml up -d --build
        "
