name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 소스 코드 체크아웃
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build Spring Boot Application
      run: |
        ./gradlew bootJar  # .jar 파일 생성

    - name: 확인용 디버그 로그
      run: |
        ls -la build/libs  # 빌드된 .jar 파일이 있는지 확인

    - name: EC2에 파일 배포
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        # 빌드된 .jar 파일과 docker-compose.yml을 EC2로 전송
        scp -i $SSH_KEY -o "StrictHostKeyChecking=no" build/libs/your-app.jar $EC2_USER@$EC2_HOST:/home/ubuntu/
        scp -i $SSH_KEY -o "StrictHostKeyChecking=no" docker-compose.yml $EC2_USER@$EC2_HOST:/home/ubuntu/

    - name: EC2에서 Docker Compose 실행
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        # EC2에서 Docker Compose로 컨테이너 빌드 및 시작
        ssh -i $SSH_KEY -o "StrictHostKeyChecking=no" $EC2_USER@$EC2_HOST "
          cd /home/ubuntu &&
          docker-compose down &&
          docker-compose up -d --build
        "
